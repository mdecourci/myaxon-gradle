ext {

    libs = libsMap(
        spring: [
            aop: "org.springframework:spring-aop:$springVersion",
            beans: "org.springframework:spring-beans:$springVersion",
            context: "org.springframework:spring-context:$springVersion",
            context_support: "org.springframework:spring-context-support:$springVersion",
            expression: "org.springframework:spring-expression:$springVersion",
            web: "org.springframework:spring-web:$springVersion",
            webmvc: "org.springframework:spring-webmvc:$springVersion",
            spring_security_web: "org.springframework.security:spring-security-web:$springSecurityVersion",
            spring_security_config: "org.springframework.security:spring-security-config:$springSecurityVersion",
            tx: "org.springframework:spring-tx:$springVersion",
    		messaging: "org.springframework:spring-messaging:$springVersion"
        ],
        apache: [
            commons_io: 'commons-io:commons-io:2.4',
            commons_beanutils: 'commons-beanutils:commons-beanutils:1.9.2',
            commons_lang3: 'org.apache.commons:commons-lang3:3.3.2'
        ],
        db: [
            h2: 'com.h2database:h2:1.4.181',
            mssql: 'com.microsoft.sqlserver:sqljdbc4:4.0'
        ],
        jersey: [
            bundle: 'com.sun.jersey:jersey-bundle:1.18',
            multipart: 'com.sun.jersey.contribs:jersey-multipart:1.18',
        ],
        json4s: [
              jackson: 'org.json4s:json4s-jackson_2.10:3.2.5'
        ],
        commons_logging:'commons-logging:commons-logging:1.1.3',
        json_simple: 'com.googlecode.json-simple:json-simple:1.1.1',
    	axon: 'org.axonframework:axon-core:2.3.2',
    	usertype_extended: 'org.jadira.usertype:usertype.extended:3.2.0.GA',
    	inject: 'javax.inject:javax.inject:1',
    	httpcore: 'org.apache.httpcomponents:httpcore:4.2.4',
    	orika: 'ma.glasnost.orika:orika-core:1.4.2',
    	reflections: 'org.reflections:reflections:0.9.9-RC2',
        test: [
                junit: 'junit:junit:4.11',
                junit_addons: 'junit-addons:junit-addons:1.4',
                assertj: 'org.assertj:assertj-core:1.6.1',
                jsonAssertj: 'net.javacrumbs.json-unit:json-unit-assertj:0.0.15',
				jsonPath: 'com.jayway.jsonpath:json-path:0.9.1',
				openpojo: 'com.googlecode.openpojo:openpojo:0.5.1',
				spring: "org.springframework:spring-test:$springVersion",
				axon: 'org.axonframework:axon-test:2.3.2',
				spock: 'org.spockframework:spock-core:0.7-groovy-2.0',
				groovy: 'org.codehaus.groovy:groovy-all:2.1.5',
                mockito: 'org.mockito:mockito-all:1.9.5',
    			wiremock: 'com.github.tomakehurst:wiremock:1.47' 
        ]
    )
}

def libsMap(Map<String, ?> map) {
    def processMap
    processMap = { innerMap ->
        innerMap.each {
            if (it.value instanceof Map) {
                innerMap[it.key] = processMap(it.value)
            }
        }
        innerMap.asImmutable().withDefault {
            throw new InvalidUserDataException("No entry '$it' in dependency map (candidates: ${innerMap.keySet().sort().join(", ")})")
        }
    }
    processMap(map)
}
